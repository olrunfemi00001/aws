name: Deploy Django Microservice

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build Docker Image
        run: docker build -t django-microservice:latest .

      - name: Save and Compress Docker Image
        run: |
          docker save django-microservice:latest | gzip > django-image.tar.gz
          ls -la django-image.tar.gz

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SERVER_PUBLIC_DNS }}
          if_key_exists: replace

      - name: Add to Known Hosts
        run: ssh-keyscan -H ${{ secrets.SERVER_PUBLIC_DNS }} >> ~/.ssh/known_hosts

      - name: Transfer Docker Image to Server
        run: |
          scp django-image.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_PUBLIC_DNS }}:~/django-image.tar.gz

      - name: Deploy on Server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_PUBLIC_DNS }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Load the Docker image
            gunzip -c ~/django-image.tar.gz | docker load
            
            # Stop and remove the existing container if it exists
            docker stop django-microservice || true
            docker rm django-microservice || true
            
            # Run the new container
            docker run -d --restart always -p 8000:8000 \
              --name django-microservice \
              django-microservice:latest
            
            # Clean up the tar.gz file
            rm ~/django-image.tar.gz
